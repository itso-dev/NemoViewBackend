<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">

<mapper namespace="com.jamie.home.api.dao.ReviewDao">
    <sql id="reviewList">
        <if test="searchKeyword != null">
            AND (
                NAME LIKE CONCAT('%',#{searchKeyword},'%') OR
                MNUMBER LIKE CONCAT('%',#{searchKeyword},'%') OR
                BRAND LIKE CONCAT('%',#{searchKeyword},'%') OR
                KEYWORDS LIKE CONCAT('%"',#{searchKeyword},'"%')
            )
        </if>
        <if test="category != null">
            AND CATEGORY = #{category}
        </if>
        <if test="videoYn">
            AND VIDEO != '[]'
        </if>
        <if test="keywordList != null">
            AND
            <foreach collection="keywordList" item="keyword" separator="AND">
                KEYWORDS LIKE CONCAT('%"',#{keyword},'"%')
            </foreach>
        </if>
    </sql>
    <sql id="reviewListOrder">
        <if test="orderType != null">
            ORDER BY
            <choose>
                <when test="orderType == 'reg_date_desc'.toString()">REGDATE DESC, </when>
                <when test="orderType == 'like_desc'.toString()">LIKE_TOT DESC, </when>
                <when test="orderType == 'hits_desc'.toString()">HITS DESC, </when>
            </choose>
            REVIEW DESC
        </if>
    </sql>
    <select id="getListReview" resultMap="ReviewMap">
        SELECT R.*
        <if test="member != null">
            ,(SELECT COUNT(*) FROM REVIEW_LIKE RL WHERE RL.REVIEW = R.REVIEW AND RL.MEMBER = #{member} AND DEL = 0) LIKE_YN
        </if>
            ,(SELECT COUNT(*) FROM REVIEW_LIKE RL WHERE RL.REVIEW = R.REVIEW AND DEL = 0) LIKE_TOT
            ,(SELECT COUNT(*) FROM REVIEW_REPLY RR WHERE RR.REVIEW = R.REVIEW) REPLY_TOT
            ,(SELECT NAME FROM CATEGORY C WHERE C.CATEGORY = R.CATEGORY) CATEGORY_NAME
        FROM REVIEW R
        WHERE 1=1
        <include refid="reviewList"></include>
        <include refid="reviewListOrder"></include>
        <if test="start != null">
            LIMIT #{start}, #{page_block}
        </if>
    </select>

    <select id="getListReviewCnt" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM REVIEW
        WHERE 1=1
        <include refid="reviewList"></include>
    </select>

    <select id="getReview" resultType="com.jamie.home.api.model.REVIEW">
        SELECT *
        FROM REVIEW
        WHERE 1=1
            AND REVIEW = #{review}
    </select>

    <update id="updateReviewHits">
        UPDATE REVIEW SET
            HITS = HITS + 1
        WHERE REVIEW = #{review}
    </update>

    <insert id="insertReview" parameterType="com.jamie.home.api.model.REVIEW" useGeneratedKeys="true" keyProperty="review">
        INSERT INTO REVIEW (
            MEMBER, CATEGORY, BRAND, NAME, MNUMBER, PHOTO, VIDEO,
            GRADE, MOTIVE, PLUS, MINUS,
            PROPOSER, STORE, PRICE, LINK, USETIME, TIP, KEYWORDS
        ) VALUES (
            #{member}, #{category}, #{brand}, #{name}, #{mnumber}, #{photo}, #{video},
            #{grade}, #{motive}, #{plus}, #{minus},
            #{proposer}, #{store}, #{price}, #{link}, #{usetime}, #{tip}, #{keywords}
        )
    </insert>

    <update id="updateReview">
        UPDATE REVIEW SET
            CATEGORY = #{category}
            ,BRAND = #{brand}
            ,NAME = #{name}
            ,MNUMBER = #{mnumber}
            ,PHOTO = #{photo}
            ,VIDEO = #{video}
            ,GRADE = #{grade}
            ,MOTIVE = #{motive}
            ,PLUS = #{plus}
            ,MINUS = #{minus}
            ,PROPOSER = #{proposer}
            ,STORE = #{store}
            ,PRICE = #{price}
            ,LINK = #{link}
            ,USETIME = #{usetime}
            ,TIP = #{tip}
            ,KEYWORDS = #{keywords}
            ,UPDDATE = now()
        WHERE REVIEW = #{review}
    </update>

    <update id="upsertReviewlike">
        INSERT INTO REVIEW_LIKE (REVIEW, MEMBER)
        VALUES (#{review}, #{member})
        ON DUPLICATE KEY UPDATE DEL = !DEL
    </update>

    <insert id="insertReviewReply">
        INSERT INTO REVIEW_REPLY (
        REVIEW, MEMBER, CONTENT
        ) VALUES (
        #{review}, #{member}, #{content}
        )
    </insert>

    <select id="getListReviewReply" resultMap="ReplyMap">
        SELECT RR.*,
            M.MEMBER AS MEMBER_MEMBER,
            M.PROFILE AS MEMBER_PROFILE,
            M.NAME AS MEMBER_NAME,
            M.NICKNAME AS MEMBER_NICKNAME,
            M.KEYWORDS AS MEMBER_KEYWORDS
        FROM REVIEW_REPLY RR
            LEFT JOIN MEMBER M on RR.MEMBER = M.MEMBER
        WHERE 1=1
            AND RR.REVIEW = #{review}
        ORDER BY RR.REPLY DESC
    </select>

    <select id="getListReviewReplyCnt" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM REVIEW_REPLY
        WHERE 1=1
            AND REVIEW = #{review}
    </select>

    <update id="updateReviewState">
        UPDATE REVIEW SET STATE = #{state} WHERE REVIEW = #{review}
    </update>

    <insert id="insertReviewKeywrod">
        INSERT INTO REVIEW_KEYWORD (REVIEW, KEYWORD) VALUES
        <foreach collection="review_keywords" item="keyword" separator=",">
            (#{review}, #{keyword.keyword})
        </foreach>
    </insert>

    <resultMap id="ReviewMap" type="com.jamie.home.api.model.REVIEW">
        <result column="REVIEW" property="review"/>
        <result column="MEMBER" property="member"/>
        <result column="CATEGORY" property="category"/>
        <result column="BRAND" property="brand"/>
        <result column="NAME" property="name"/>
        <result column="MNUMBER" property="mnumber"/>
        <result column="PHOTO" property="photo"/>
        <result column="VIDEO" property="video"/>
        <result column="GRADE" property="grade"/>
        <result column="MOTIVE" property="motive"/>
        <result column="PLUS" property="plus"/>
        <result column="MINUS" property="minus"/>
        <result column="PROPOSER" property="proposer"/>
        <result column="STORE" property="store"/>
        <result column="PRICE" property="price"/>
        <result column="LINK" property="link"/>
        <result column="USETIME" property="usetime"/>
        <result column="TIP" property="tip"/>
        <result column="HITS" property="hits"/>
        <result column="STATE" property="state"/>
        <result column="KEYWORDS" property="keywords"/>
        <result column="REGDATE" property="regdate"/>
        <result column="UPDDATE" property="upddate"/>
        <result column="LIKE_YN" property="likeYn"/>
        <result column="LIKE_TOT" property="likeCnt"/>
        <result column="REPLY_TOT" property="replyCnt"/>
        <result column="CATEGORY_NAME" property="categoryName"/>
        <association property="memberVO" column="MEMBER" javaType="com.jamie.home.api.model.MEMBER">
            <result column="MEMBER_PROFILE" property="profile"/>
            <result column="MEMBER_NAME" property="name"/>
            <result column="MEMBER_NICKNAME" property="nickname"/>
            <result column="MEMBER_KEYWORDS" property="keywords"/>
        </association>
    </resultMap>

    <resultMap id="ReplyMap" type="com.jamie.home.api.model.REVIEW_REPLY">
        <result column="REPLY" property="reply"/>
        <result column="REVIEW" property="review"/>
        <result column="MEMBER" property="member"/>
        <result column="CONTENT" property="content"/>
        <association property="memberVO" column="MEMBER" javaType="com.jamie.home.api.model.MEMBER">
            <result column="MEMBER_PROFILE" property="profile"/>
            <result column="MEMBER_NAME" property="name"/>
            <result column="MEMBER_NICKNAME" property="nickname"/>
            <result column="MEMBER_KEYWORDS" property="keywords"/>
        </association>
    </resultMap>
</mapper>