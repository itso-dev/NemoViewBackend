<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">

<mapper namespace="com.jamie.home.api.dao.MemberDao">
    <sql id="memberList">
        AND ROLE != 'ROLE_ADMIN'
        <if test="searchKeyword != null">
            <if test="searchType == 'member'.toString()">
                AND MEMBER LIKE CONCAT('%',#{searchKeyword},'%')
            </if>
            <if test="searchType == 'nickname'.toString()">
                AND NICKNAME LIKE CONCAT('%',#{searchKeyword},'%')
            </if>
            <if test="searchType == 'phone'.toString()">
                AND PHONE LIKE CONCAT('%',#{searchKeyword},'%')
            </if>
        </if>
        <if test="stopMember">
            AND STATE = '2'
        </if>
        <if test="alertMember">
            AND STATE = '1'
        </if>
    </sql>
    <sql id="memberListOrder">
        ORDER BY
        <if test="orderType != null">
            <choose>
                <when test="orderType == 'reg_date_desc'.toString()">REGDATE DESC, </when>
                <when test="orderType == 'log_date_desc'.toString()">LOGDATE DESC, </when>
                <when test="orderType == 'abc'.toString()">NICKNAME, </when>
            </choose>
        </if>
        MEMBER DESC
    </sql>
    <select id="getListMember" resultType="com.jamie.home.api.model.MEMBER">
        SELECT *
        FROM MEMBER
        WHERE 1=1
        <include refid="memberList"></include>
        <include refid="memberListOrder"></include>
        <if test="start != null">
            LIMIT #{start}, #{page_block}
        </if>
    </select>

    <select id="getListMemberCnt" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM MEMBER
        WHERE 1=1
        <include refid="memberList"></include>
    </select>

    <select id="getMember" resultType="com.jamie.home.api.model.MEMBER">
        SELECT *
        FROM MEMBER
        WHERE MEMBER = #{member}
    </select>

    <insert id="insertMember" parameterType="com.jamie.home.api.model.MEMBER" useGeneratedKeys="true" keyProperty="member">
        INSERT INTO MEMBER
            (EMAIL, PASSWORD, PHONE, NAME, NICKNAME, GENDER, BIRTHDAY, JOB, MONEY, LOCATION, CODE, ROLE, KEYWORDS)
        VALUES
            (#{email}, #{password}, #{phone}, #{name}, #{nickname}, #{gender}, #{birthday}, #{job}, #{money}, #{location}, #{code}, #{role}, #{keywords})
    </insert>

    <update id="updateMember">
        UPDATE MEMBER SET
            NICKNAME = #{nickname}
        <if test="password != null">,PASSWORD = #{password}</if>
        <if test="phone != null">,PHONE = #{phone}</if>
        <if test="profile != null">,PROFILE = #{profile}</if>
            ,UPDDATE = now()
        WHERE MEMBER = #{member}
    </update>

    <select id="checkEmail" resultType="com.jamie.home.api.model.MEMBER">
        SELECT *
        FROM MEMBER
        WHERE EMAIL = #{email}
    </select>

    <select id="checkCode" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM MEMBER WHERE CODE = #{code}
    </select>

    <update id="updateLogDate">
        UPDATE MEMBER SET LOGDATE = now() WHERE MEMBER = #{member}
    </update>

    <update id="updateMemberKeywords">
        UPDATE MEMBER SET KEYWORDS = #{keywords} WHERE MEMBER = #{member}
    </update>

    <update id="updateStateMember">
        UPDATE MEMBER SET STATE = #{state} WHERE MEMBER = #{member}
    </update>

    <update id="updateMemberSearchKeywords">
        UPDATE MEMBER SET SWORDS = #{swords} WHERE MEMBER = #{member}
    </update>

    <select id="getMemberByCode" resultType="com.jamie.home.api.model.MEMBER">
        SELECT *
        FROM MEMBER
        WHERE CODE = #{inputCode}
    </select>

    <update id="updateMemberPoint">
        UPDATE MEMBER SET POINT = POINT + #{point} WHERE MEMBER = #{member}
    </update>

    <update id="updateMemberAccount">
        UPDATE MEMBER SET ACCOUNT = #{account} WHERE MEMBER = #{member}
    </update>

    <insert id="insertMemberKeywrod">
        INSERT INTO MEMBER_KEYWORD (MEMBER, KEYWORD) VALUES
        <foreach collection="review_keywords" item="keyword" separator=",">
            (#{member}, #{keyword.keyword})
        </foreach>
    </insert>

    <delete id="deleteAllMemberKeywrod">
        DELETE FROM MEMBER_KEYWORD WHERE MEMBER = #{member}
    </delete>

    <select id="find" resultType="com.jamie.home.api.model.MEMBER">
        SELECT *
        FROM MEMBER
        WHERE 1=1
        <if test="email != null">
            AND EMAIL = #{email}
        </if>
        <if test="name != null">
            AND NAME = #{name}
        </if>
        <if test="birthday != null">
            AND BIRTHDAY = #{birthday}
        </if>
    </select>

    <insert id="insertRemember">
        INSERT INTO MEMBER_REMEMBER
            (MEMBER, TOKEN, UUID)
        VALUE
            (#{member}, #{token}, #{uuid})
        ON DUPLICATE KEY UPDATE
            TOKEN = #{token}
            , UUID = #{uuid}
            , REGDATE = NOW()
            , UPDDATE = NOW() + interval 1 month
    </insert>

    <select id="getRemember" resultType="com.jamie.home.api.model.REMEMBER">
        SELECT * FROM MEMBER_REMEMBER WHERE UUID = #{rememberCode} AND UPDDATE >= NOW()
    </select>

    <delete id="deleteMember">
        DELETE FROM MEMBER WHERE MEMBER = #{member}
    </delete>

    <select id="getAdminDashInfo" resultType="com.jamie.home.api.model.DASH">
        SELECT
            (SELECT COUNT(*) FROM MEMBER WHERE ROLE = 'ROLE_USER') AS memberTot
            ,(SELECT COUNT(*) FROM MEMBER WHERE ROLE = 'ROLE_USER' AND REGDATE >= #{searchStartDate} AND REGDATE <![CDATA[<=]]> #{searchEndDate}) AS memberNew
            ,(SELECT COUNT(*) FROM MEMBER WHERE ROLE = 'ROLE_USER' AND LOGDATE >= #{searchStartDate} AND LOGDATE <![CDATA[<=]]> #{searchEndDate}) AS memberLogin
            ,(SELECT SUM(POINT) FROM MEMBER WHERE ROLE = 'ROLE_USER') AS pointTot
            ,(SELECT SUM(VALUE) FROM POINT WHERE TYPE = '2' AND STATE = '2') AS pointApply
            ,(SELECT SUM(VALUE) FROM POINT WHERE TYPE = '2' AND STATE = '1') AS pointComplete
        FROM DUAL;
    </select>

    <select id="getListMemberKeyword" resultType="com.jamie.home.api.model.KEYWORD">
        SELECT * FROM MEMBER_KEYWORD WHERE MEMBER = #{member}
    </select>

    <select id="getMandatoryKeyword" resultType="com.jamie.home.api.model.Keywords">
        SELECT '2' AS TYPE, KEYWORD AS `KEY`, NAME AS VALUE
        FROM CATEGORY_KEYWORD
        WHERE KEYWORD IN (SELECT KEYWORD FROM MEMBER_KEYWORD WHERE MEMBER = #{member})
    </select>
</mapper>