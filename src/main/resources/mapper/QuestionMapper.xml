<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">

<mapper namespace="com.jamie.home.api.dao.QuestionDao">
    <sql id="questionList">
        <if test="type != null">
            AND Q.TYPE = #{type}
        </if>
    </sql>
    <sql id="questionListOrder">
        <if test="orderType != null">
            ORDER BY
            <choose>
                <when test="orderType == 'reg_date_desc'.toString()">Q.REGDATE DESC, </when>
            </choose>
            Q.QUESTION DESC
        </if>
    </sql>
    <select id="getListQuestion" resultMap="QuestionMap">
        SELECT Q.*
            ,(SELECT COUNT(*) FROM QUESTION_ANSWER QA WHERE QA.QUESTION = Q.QUESTION AND CHOOSE = TRUE) AS ANSWER_YN
            ,(SELECT COUNT(*) FROM QUESTION_ANSWER QA WHERE QA.QUESTION = Q.QUESTION) AS ANSWER_CNT
            , M.MEMBER AS MEMBER_MEMBER
            , M.PROFILE AS MEMBER_PROFILE
            , M.NAME AS MEMBER_NAME
            , M.NICKNAME AS MEMBER_NICKNAME
        FROM QUESTION Q
            LEFT JOIN MEMBER M on Q.MEMBER = M.MEMBER
        WHERE 1=1
        <include refid="questionList"></include>
        <include refid="questionListOrder"></include>
        <if test="start != null">
            LIMIT #{start}, #{page_block}
        </if>
    </select>

    <select id="getListQuestionCnt" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM QUESTION Q
        WHERE 1=1
        <include refid="questionList"></include>
    </select>

    <select id="getQuestion" resultMap="QuestionMap">
        SELECT Q.*
            ,(SELECT COUNT(*) FROM QUESTION_ANSWER QA WHERE QA.QUESTION = Q.QUESTION AND CHOOSE = TRUE) AS ANSWER_YN
            ,(SELECT COUNT(*) FROM QUESTION_ANSWER QA WHERE QA.QUESTION = Q.QUESTION) AS ANSWER_CNT
            , M.MEMBER AS MEMBER_MEMBER
            , M.PROFILE AS MEMBER_PROFILE
            , M.NAME AS MEMBER_NAME
            , M.NICKNAME AS MEMBER_NICKNAME
        FROM QUESTION Q
            LEFT JOIN MEMBER M on Q.MEMBER = M.MEMBER
        WHERE 1=1
            AND QUESTION = #{question}
    </select>

    <update id="updateQuestionHits">
        UPDATE QUESTION SET
            HITS = HITS + 1
        WHERE QUESTION = #{question}
    </update>

    <insert id="insertQuestion">
        INSERT INTO QUESTION
            (MEMBER, TYPE, TITLE, CONTENT, NOKEYWORD, POINT, STATE, KEYWORDS)
        VALUES
            (#{member}, #{type}, #{title}, #{content}, #{nokeyword}, #{point}, #{state}, #{keywords})
    </insert>

    <update id="updateQuestion">
        UPDATE QUESTION SET
            TYPE = #{type}
            ,TITLE = #{title}
            ,CONTENT = #{content}
            ,NOKEYWORD = #{nokeyword}
            ,POINT = #{point}
            ,STATE = #{state}
            ,KEYWORDS = #{keywords}
            ,UPDDATE = now()
        WHERE QUESTION = #{question}
    </update>

    <select id="getListQuestionAnswer" resultMap="AnswerMap">
        SELECT QA.*
            , M.MEMBER AS MEMBER_MEMBER
            , M.PROFILE AS MEMBER_PROFILE
            , M.NAME AS MEMBER_NAME
            , M.NICKNAME AS MEMBER_NICKNAME
            , M.KEYWORDS AS MEMBER_KEYWORDS
        FROM QUESTION_ANSWER QA
            LEFT JOIN MEMBER M on QA.MEMBER = M.MEMBER
        WHERE 1=1
            AND QA.QUESTION = #{question}
        ORDER BY QA.ANSWER DESC
        <if test="start != null">
            LIMIT #{start}, #{page_block}
        </if>
    </select>

    <select id="getListQuestionAnswerCnt" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM QUESTION_ANSWER
        WHERE 1=1
            AND QUESTION = #{question}
    </select>

    <insert id="insertQuestionAnswer">
        INSERT INTO QUESTION_ANSWER
            (QUESTION, MEMBER, CONTENT)
        VALUES
            (#{question}, #{member}, #{content})
    </insert>

    <update id="updateQuestionAnswerChoose">
        UPDATE QUESTION_ANSWER SET
            CHOOSE = !CHOOSE
            ,UPDDATE = now()
        WHERE ANSWER = #{answer}
    </update>

    <update id="updateQuestionState">
        UPDATE QUESTION SET STATE = #{state} WHERE QUESTION = #{question}
    </update>

    <resultMap id="QuestionMap" type="com.jamie.home.api.model.QUESTION">
        <result column="QUESTION" property="question"/>
        <result column="MEMBER" property="member"/>
        <result column="TYPE" property="type"/>
        <result column="TITLE" property="title"/>
        <result column="CONTENT" property="content"/>
        <result column="HITS" property="hits"/>
        <result column="NOKEYWORD" property="nokeyword"/>
        <result column="POINT" property="point"/>
        <result column="STATE" property="state"/>
        <result column="KEYWORDS" property="keywords"/>
        <result column="ANSWER_YN" property="answerYn"/>
        <result column="ANSWER_CNT" property="answerCnt"/>
        <association property="memberVO" column="MEMBER" javaType="com.jamie.home.api.model.MEMBER">
            <result column="MEMBER_PROFILE" property="profile"/>
            <result column="MEMBER_NAME" property="name"/>
            <result column="MEMBER_NICKNAME" property="nickname"/>
            <result column="MEMBER_KEYWORDS" property="keywords"/>
        </association>
    </resultMap>

    <resultMap id="AnswerMap" type="com.jamie.home.api.model.QUESTION_ANSWER">
        <result column="ANSWER" property="answer"/>
        <result column="QUESTION" property="question"/>
        <result column="MEMBER" property="member"/>
        <result column="CONTENT" property="content"/>
        <result column="CHOOSE" property="choose"/>
        <association property="memberVO" column="MEMBER" javaType="com.jamie.home.api.model.MEMBER">
            <result column="MEMBER_PROFILE" property="profile"/>
            <result column="MEMBER_NAME" property="name"/>
            <result column="MEMBER_NICKNAME" property="nickname"/>
            <result column="MEMBER_KEYWORDS" property="keywords"/>
        </association>
    </resultMap>
</mapper>